dnl Copyright 2017 Endless Mobile, Inc.
dnl
dnl Permission is hereby granted, free of charge, to any person obtaining a copy
dnl of this software and associated documentation files (the "Software"), to
dnl deal in the Software without restriction, including without limitation the
dnl rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
dnl sell copies of the Software, and to permit persons to whom the Software is
dnl furnished to do so, subject to the following conditions:
dnl
dnl The above copyright notice and this permission notice shall be included in
dnl all copies or substantial portions of the Software.
dnl
dnl THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
dnl IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
dnl FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
dnl AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
dnl LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
dnl FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
dnl IN THE SOFTWARE.
dnl
dnl As a special exception, any Work generated by code contained in this
dnl file is dedicated to the public domain and Endless Mobile, Inc, waives their
dnl rights to the work worldwide under copyright law, to the extent allowed
dnl by the law (the 'Waiver'). Endless Mobile, Inc makes the Wavier for the
dnl benefit of each member public at large. The Waiver shall not be subject to
dnl revocation, recession, cancellation, termination or any other legal or
dnl equitable action to disrupt the quiet enjoyment of the work by the public.
dnl Should any part of the Waiver be for any reason judged legally invalid or
dnl ineffective under applicable law, then the Waiver shall be preserved to the
dnl maximum extent permitted.
dnl
dnl Macros to check for eslint support
dnl
dnl Expand EOS_ESLINT_RULES in your Makefile.am to get access to a
dnl 'eslint' target which will run eslint over the files specified in
dnl EOS_ESLINT_FILES.
dnl
dnl Add run_eslint.eslint to TESTS to run eslint checks on make check

EOS_HAVE_ESLINT=no

ESLINT=notfound

AC_DEFUN_ONCE([EOS_ESLINT], [
    # Enable the --enable-eslint switch, although it will only be effective
    # if we can actually run eslint.
    AC_ARG_ENABLE([eslint], [
        AS_HELP_STRING([--enable-eslint],
            [Run code style and correctness checks when running tests @<:@default=yes@:>@])
    ])

    EOS_ESLINT_REQUESTED=yes
    AC_MSG_CHECKING([whether eslint checks were requested])
    AS_IF([test "x${enable_eslint}" = "xno"], [
        EOS_ESLINT_REQUESTED=no
    ])
    AC_MSG_RESULT([$EOS_ESLINT_REQUESTED])

    AS_IF([test "x$EOS_ESLINT_REQUESTED" = "xyes"], [
        # Need eslint in order to run eslint, obviously.
        AC_PATH_PROG([ESLINT], [eslint], [notfound])

        EOS_ESLINT_AVAILABLE=no
        AS_IF([test "x$ESLINT" != "xnotfound"], [
            EOS_ESLINT_AVAILABLE=yes
        ])

        AC_MSG_RESULT([$EOS_ESLINT_AVAILABLE])
    ])

    AS_IF([test "x$EOS_ESLINT_AVAILABLE" = "xyes"], [
        EOS_ESLINT_RULES_HEADER='
eslint $(EOS_ESLINT_FILES):
	$(ESLINT) $(EOS_ESLINT_FILES)
'
    ], [
        EOS_ESLINT_RULES_HEADER='
eslint:
	@echo "ESLint not available on this system"
'
    ])

    EOS_ESLINT_RULES_FOOTER='
run_eslint.eslint:
	echo "make eslint" >> run_eslint.eslint

ESLINT_LOG_COMPILER = bash
CLEANFILES += run_eslint.eslint
.PHONY: eslint
'

    EOS_ESLINT_RULES="$EOS_ESLINT_RULES_HEADER $EOS_ESLINT_RULES_FOOTER"
    AC_SUBST([EOS_ESLINT_RULES])
    AM_SUBST_NOTMAKE([EOS_ESLINT_RULES])
])
